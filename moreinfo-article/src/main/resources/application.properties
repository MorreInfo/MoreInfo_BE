server.port=8002
server.servlet.context-path=/moreinfo/article


# 数据库访问配置
# 主数据源，默认的
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true

spring.datasource.type= com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name= com.mysql.cj.jdbc.Driver
spring.datasource.url= ENC(wfqhnUOfSc5MIeVfQutUz8ZFS9BzuLAUF41zLgqwSZi3yUSPT9zF5mQL76FfKfdpKHJ14h2oKUENkNwrSqhcMfjkoqrO5hEU/sd+oH5tGZQFyQLh4P+Vlg==)
spring.datasource.username= ENC(9nENlBw+hr+CmKBFM7PjZQ==)
spring.datasource.password= ENC(iMDnzfGXCWEv845i14tf7zzBRwbQsMf3)

# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.druid.initial-size=5
spring.datasource.druid.minIdle=5
spring.datasource.druid.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.druid.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=false
spring.datasource.druid.testOnReturn=false
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall



spring.mvc.throw-exception-if-no-handler-found=true


# Redis数据库索引
spring.redis.database=0
# Redis服务器地址
spring.redis.host=ENC(GQD6N1mzo7AD2q69521o/g4W10i8GL3k)
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password= ENC(alGDDeU5s8IdukoT90PS4Fo1exuYUJ2Q)
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=200
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout = 1200


# jasypt 密码加密配置
jasypt.encryptor.algorithm= PBEWithMD5AndDES
jasypt.encryptor.iv-generator-classname=org.jasypt.iv.NoIvGenerator

